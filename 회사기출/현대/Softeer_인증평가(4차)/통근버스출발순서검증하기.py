# 출퇴근 통근 버스
    # 퇴근버스
        # 주차장에 일렬로 주차
        # 번호순서대로 출발
        # 앞의 버스가 모두 나가야 뒤의 버스가 나갈 수 있음
    # 임시주차장
        # 출입구 하나
        # 스택같이 맨 처음 들어간 버스는 맨 마지막에 나올 수 있음
        # 한번 임시 주차장으로 이동했던 버스는 다시 원래 주차장으로 이동 불가능
# 스택정렬
    # 정렬된 순서로 출력되도록 하는 것
    # 특정 상황에서는 스택 정렬이 불가능하다는 것이 증명됨
        # i < j < k
        # ai < aj , ai > ak
# 연구소 주차장에 주차되어 있는 버스들이 임시 주차장을 활용하여 번호 순서대로 출발할 수 있는지 알아보는 프로그램 개발할거임
# answer : 버스들이 번호 순서대로 출발하는 것이 불가능한 것을 증명할 수 있는 케이스들의 개수
    # 모든 순서쌍들의 버스들이 순서대로 출발할 수 있으면 0 출력
#=================================================================
n = int(input())
nums = [0] + list(map(int, input().split()))

# 1. k로 고를 수 있는 경우의 수 미리 계산
# arr[X][j] : j번째열보다 오른쪽에 있는 숫자들중 x보다 값이 작은 것들의 개수
arr = [[0 for _ in range(n + 1)] for _ in range(n + 1)]

# 주어진 숫자 개수 만큼 반복하면서
for x in range(1, n + 1):
    # 각 행의 마지막 열을 0으로 갱신
    # 각각의 x에 대해 j가 n일 때 n번째보다 오른쪽에 있는 숫자는 없으므로 0개 저장
    arr[x][n] = 0
    # 각 행의 뒤에서 2번째 열에 대해, 만약 현재 index(x)가 마지막 숫자 보다 크면 1, 작으면 0으로 갱신
    arr[x][n - 1] = 1 if nums[n] < x else 0

    # 뒤에서 2번째 열부터 1열까지 반복하면서
        # n - 2: 위에서 마지막열과 마지막에서 2번째열은 확인했으니까 n-2 부터 시작
    for j in range(n - 2, 0, -1):
        # 만약 열 인덱스에 해당하는 숫자가 현재 x(index)보다 작다면
        if (nums[j + 1] < x):
            # 중요 - 구간합 알고리즘 아이디어 사용 부분
                # 현재열의 숫보다 오른쪽에 있는 숫자들 중 값이 작은 숫자들의 개수 = (다음열의 숫자보다 오른쪽에 있는 숫자들중 값이 작은 숫자들의 개수) + 1 로 갱신
            arr[x][j] = arr[x][j + 1] + 1
        # else 현재 열 인덱스에 해당하는 숫자가 x보다 같거나 크다면
        else:
            # 중요 - 구간합 알고리즘 아이디어 사용 부분
                # 현재열의 숫자보다 오른쪽에 있는 숫자들 중 값이 작은 숫자들의 개수 = (다음열의 숫자보다 오른쪽에 있는 숫자들중 값이 작은 숫자들의 개수) 로 갱신
                     # 다음열 숫자가 현재열 숫자보다 작지 않기 때문에 추가안됨
            arr[x][j] = arr[x][j + 1]

# 2. arr를 이용해 정답 구하기
cnt = 0

# 1부터 숫자개수-1까지 반복하면서(현재 숫자)
for i in range(1, n - 1):
    # i+1부터, 마지막숫자까지 반복하면서(비교할 숫자)
    for j in range(i + 1, n):
        # 만약 현재 숫자가 비교할 숫자보다 작다면, i<j와 ai<aj를 동시에 만족하는 모든 i 와 j 에 대해 더해주기
        if (nums[i] < nums[j]):
            # arr[nums[i]][j] :
                # j번째 보다 오른쪽에 있는 숫자들 중 a[i] > a[k]인 것들의 개수
                    # 즉, i<k와 ai>ak를 동시에 만족하는 k의 개수를 의미
            cnt += arr[nums[i]][j]

print(cnt)