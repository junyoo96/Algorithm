# 9:13~ 9:53 / 9:53~ (아이디어는 맞았음)
# 1:05~1:26 / 1:40~2:25 / 맞음(66분)
# 10:50~11:00/11:00~11:16(26분)

# n : 집 개수
# 빨강,초록,파랑 중 하나의 색으로 칠함
# 아래 규칙 만족하면서 모든 집을 칠하는 비용의 최솟값
    # 1번 집의 색은 2번 집의 색과 같지 않음
    # N번 집은 N-1번 집의 색과 같지 않음
    # i번집색은 i-1번, i+1번 집의 색과 같지 않음
# answer : 모든 집을 칠하는 비용의 최솟값
# 점화식
    # 현재 고른 집 색깔 중 이전 색깔의 집과 겹치지 않는 집 중에 비용이 가장 적은 것 더하기
#====================================================================================
import sys

# n 입력
n = int(sys.stdin.readline())
# 각 집 비용 입력
dp = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]

# 각 집 비용 리스트 1부터 행 반복하면서
for i in range(1, n):
    # 현재 고른 집 색깔 중 이전 색깔의 집과 겹치지 않는 집 중에 비용이 가장 적은 것 더하기
    dp[i][0] = min(dp[i - 1][1], dp[i - 1][2]) + dp[i][0]
    dp[i][1] = min(dp[i - 1][0], dp[i - 1][2]) + dp[i][1]
    dp[i][2] = min(dp[i - 1][0], dp[i - 1][1]) + dp[i][2]

# dp테이블의 마지막 행 중 가장 작은 값 출력
answer = min(dp[n - 1])
# answer 출력
print(answer)