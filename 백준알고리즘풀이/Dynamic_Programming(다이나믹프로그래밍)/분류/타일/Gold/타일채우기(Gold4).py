# 11:06~
# 11:00~ / 틀림 - 경우의 수를 생각못해서 점화식 구현 못함

# n : 열
# answer : 주어진 타일 종류로 벽을 채우는 경우의 수

import sys

n = int(sys.stdin.readline())
# 점화식 초기값
# dp[1]의 경우, 3x1(가로)인 벽을 타일로 채우는 경우의 수를 의미하는데,
# 주어진 타일종류로는 만들 수 없으므로 경우의 수가 0이 되기 때문에 따로 값을 초기화 할 필요없음
dp = [0] * 31 # 주의 - dp 테이블 크기를 31로 하지않고 n + 1하면 indexerror 발생
# dp[2]의 경우,
dp[2] = 3

# 점화식
# 벽의 가로가 홀수인 경우 주어진 타일로 만들수 없기 때문에 가로 길이를 3부터 아닌 4부터 시작하고,
# 2씩 증가하면서 가로가 짝수인 경우만 계산
for i in range(4, n + 1, 2):
    # 중요(경우의 수 계산)
        # 2 : 가로가 짝수배로 늘어날 때마다, 새로운 경우의 수가 2가지씩 늘어나기 때문에 더해주는 경우의 수
        # dp[i - 2] * 3 : 가로가 2칸 남아있을 때 만들 수 있는 경우의 수가 3가지 이므로, 2칸 남아있을 때 까지의 경우의 수 * 3
        # sum(dp[:i-2]) * 2
            # 0 ~ n-4 까지의 타일 뒤에 자신을 붙혀서 만들 수 있는 2가지 경우를 곱한 경우
    dp[i] = 2 + dp[i - 2] * 3 + sum(dp[:i-2]) * 2

answer = dp[n]
print(answer)